{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://example.org/pacer.schema.json",
  "title": "PACER v1.1 Register (CSV-as-JSON)",
  "description": "Authoritative JSON Schema for PACER v1.1. Convert the CSV register to an array of JSON objects using header names as keys, then validate with this schema.",
  "type": "array",
  "minItems": 1,
  "items": {
    "type": "object",
    "additionalProperties": true,
    "required": [
      "ID",
      "Title",
      "Phase",
      "Status",
      "DoD"
    ],
    "properties": {
      "ID": {
        "type": "string",
        "description": "Unique, immutable PAC identifier. Default pattern PAC-### or PAC-#### (prefix configurable).",
        "pattern": "^PAC-\\d{3,4}$"
      },
      "Title": {
        "type": "string",
        "description": "Short human-readable summary (\u2264100 chars).",
        "maxLength": 100,
        "minLength": 1
      },
      "Phase": {
        "type": "string",
        "description": "Logical grouping for planning.",
        "enum": [
          "Foundation",
          "Auth & DB",
          "Contest Mgmt",
          "Voting",
          "UX & Polish",
          "Admin Tools",
          "Integrations",
          "Accounts & Profiles",
          "Security/Perf/Ops",
          "Embeds",
          "Release"
        ]
      },
      "Status": {
        "type": "string",
        "description": "Lifecycle state.",
        "enum": [
          "TODO",
          "DOING",
          "REVIEW",
          "DONE"
        ]
      },
      "BlockedBy": {
        "type": "string",
        "description": "Comma-separated list of PAC IDs that must be DONE first, or empty string.",
        "pattern": "^$|^PAC-\\d{3,4}(,PAC-\\d{3,4})*$"
      },
      "Assignee": {
        "type": "string",
        "description": "Free text or @handle."
      },
      "Priority": {
        "type": "string",
        "description": "Task priority level.",
        "enum": [
          "low",
          "medium",
          "high",
          "critical"
        ]
      },
      "Urgency": {
        "type": "string",
        "description": "Task urgency level.",
        "enum": [
          "low",
          "medium",
          "high",
          "urgent"
        ]
      },
      "StartedAt": {
        "type": "string",
        "description": "UTC ISO 8601 timestamp set on first entry to DOING.",
        "format": "date-time"
      },
      "DoneAt": {
        "type": "string",
        "description": "UTC ISO 8601 timestamp set when entering DONE.",
        "format": "date-time"
      },
      "DoD": {
        "type": "string",
        "description": "Objective Definition of Done; at least one criterion.",
        "minLength": 1
      },
      "Notes": {
        "type": "string",
        "description": "Free text, one-line updates preferred."
      },
      "ValidationRules": {
        "type": "string",
        "description": "Comma-separated list of custom validation rules for this PAC."
      },
      "Context": {
        "type": "string",
        "description": "What the AI needs to know to work on this PAC."
      },
      "PreviousAttempts": {
        "type": "string",
        "description": "What has been tried before (comma-separated)."
      },
      "RelatedWork": {
        "type": "string",
        "description": "Links to similar PACs or relevant work."
      },
      "LearningNotes": {
        "type": "string",
        "description": "What the AI learned from this work."
      },
      "DependencyType": {
        "type": "string",
        "description": "Type of dependency: hard, soft, optional.",
        "enum": ["hard", "soft", "optional"]
      },
      "DependencyReason": {
        "type": "string",
        "description": "Why this dependency exists."
      },
      "UnblockingStrategy": {
        "type": "string",
        "description": "How to resolve if blocked."
      },
      "Instructions": {
        "type": "string",
        "description": "Step-by-step what to do."
      },
      "ExpectedOutput": {
        "type": "string",
        "description": "What success looks like."
      },
      "ValidationCriteria": {
        "type": "string",
        "description": "How to verify completion."
      },
      "ErrorHandling": {
        "type": "string",
        "description": "What to do when things go wrong."
      }
    }
  },
  "examples": [
    [
      {
        "ID": "PAC-021",
        "Title": "Create contest CRUD",
        "Phase": "Contest Mgmt",
        "Status": "TODO",
        "BlockedBy": "",
        "Assignee": "@you",
        "StartedAt": "",
        "DoneAt": "",
        "DoD": "Form with title/desc/dates/rules; status cycle draft\u2192active\u2192voting\u2192completed",
        "Notes": ""
      }
    ]
  ]
}